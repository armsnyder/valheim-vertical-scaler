
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: valheimservers.valheim.zingerweb.services
spec:
  group: valheim.zingerweb.services
  names:
    kind: ValheimServer
    listKind: ValheimServerList
    plural: valheimservers
    shortNames:
    - vhs
    singular: valheimserver
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ValheimServer is the Schema for the valheimservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ValheimServerSpec defines the desired state of ValheimServer
            properties:
              advertisedHostname:
                description: Externally accessible hostname, managed in AWS Route53,
                  which will have its records changed when the server changes locations.
                  Required for automatic external DNS management.
                type: string
              awsRegion:
                default: us-east-1
                description: AWS region for the EC2 instance. Defaults to "us-east-1"
                  if left blank.
                type: string
              awsSecretName:
                description: Secret containing the key "serverPassword". "serverPassword"
                  is the password for joining the Valheim server. Defaults to the
                  same name as this ValheimServer if left blank.
                type: string
              backup:
                description: Backup settings for when the server is running in the
                  Kubernetes cluster. No auto-backups will be performed if left blank.
                properties:
                  address:
                    description: Target of remote backup server in the form "username@ip:path"
                    type: string
                  privateKeySecretName:
                    description: Name of a Secret of type kubernetes.io/ssh-auth.
                    type: string
                required:
                - address
                - privateKeySecretName
                type: object
              clusterAddress:
                description: Externally accessible hostname or IP for traffic to the
                  server on the Kubernetes cluster. Required for automatic external
                  DNS management.
                type: string
              location:
                default: K8s
                description: Desired server location (AWS or K8s). May be modified
                  to trigger a server migration. Defaults to "K8s" if left blank.
                enum:
                - None
                - AWS
                - K8s
                type: string
              passwordSecretName:
                description: Secret containing the keys "awsAccessKeyId" and "awsSecretAccessKey".
                  "awsAccessKeyId" and "awsSecretAccessKey" are the AWS credentials
                  used for managing Route53 and EC2. Defaults to the same name as
                  this ValheimServer if left blank.
                type: string
              port:
                default: 2456
                description: First port number. This number and the following two
                  port numbers will be used. Defaults to the default Valheim server
                  port 2456 if left blank.
                format: int32
                maximum: 65535
                minimum: 0
                type: integer
              resources:
                description: Resource requirements for the server pod. Default is
                  2 CPU and 4Gi memory, for both requests and limits, if left blank.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              serverName:
                description: Valheim server name, as the server appears in the community
                  servers list. Defaults to the same name as this ValheimServer if
                  left blank.
                type: string
              worldName:
                default: Dedicated
                description: Valheim world name, matching the name of the world save
                  data. Defaults to "Dedicated" if left blank.
                type: string
            type: object
          status:
            description: ValheimServerStatus defines the observed state of ValheimServer
            properties:
              conditions:
                description: Observations of the ValheimServer's current state, including
                  any errors. *optional
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
